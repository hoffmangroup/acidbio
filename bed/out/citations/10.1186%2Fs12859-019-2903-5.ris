TY  - JOUR
AU  - Costanza, Pascal
AU  - Herzeel, Charlotte
AU  - Verachtert, Wilfried
PY  - 2019
DA  - 2019/06/03
TI  - A comparison of three programming languages for a full-fledged next-generation sequencing tool
JO  - BMC Bioinformatics
SP  - 301
VL  - 20
IS  - 1
AB  - elPrep is an established multi-threaded framework for preparing SAM and BAM files in sequencing pipelines. To achieve good performance, its software architecture makes only a single pass through a SAM/BAM file for multiple preparation steps, and keeps sequencing data as much as possible in main memory. Similar to other SAM/BAM tools, management of heap memory is a complex task in elPrep, and it became a serious productivity bottleneck in its original implementation language during recent further development of elPrep. We therefore investigated three alternative programming languages: Go and Java using a concurrent, parallel garbage collector on the one hand, and C++17 using reference counting on the other hand for handling large amounts of heap objects. We reimplemented elPrep in all three languages and benchmarked their runtime performance and memory use.
SN  - 1471-2105
UR  - https://doi.org/10.1186/s12859-019-2903-5
DO  - 10.1186/s12859-019-2903-5
ID  - Costanza2019
ER  - 
